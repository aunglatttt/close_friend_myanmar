@* The model declaration is no longer needed as the view is now just a template *@
@model List<CloseFriendMyanamr.ViewModel.PropertyViewModel> 
@{
    ViewData["Title"] = "Property List";
}
<div class="row d-flex">
    <div class="col-sm-12 d-flex justify-content-end">
        <a class="btn btn-secondary col-md-2 col-sm-4" asp-controller="Property" asp-action="NewProperty">
            <i class="fas fa-user-plus"></i> Add New Property
        </a>
    </div>
</div>

<div class="row mt-3">
    <div class="col-sm-12">
        <div class="card mx-auto shadow">
            <div class="card-header px-0">
                <div class="col-12 ms-2">
                    <span class="text-primary fw-bold">Property List</span>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="propertyTable" class="table table-bordered table-hover w-100">
                        <thead>
                            <tr>
                                <th></th>
                                <th data-name="Code">Code</th>
                                <th data-name="LastCheckedDate">Last Checked</th>
                                <th data-name="Street">လိပ်စာ</th>
                                <th data-name="Comment">Info</th>
                                <th data-name="SalePrice">Price(L)</th>
                                <th data-name="Owner">Owner</th>
                                <th data-name="Remark">Remark</th>
                            </tr>
                        </thead>
                        @* The table body is now empty. DataTables will populate it. *@
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#propertyTable').DataTable({
                "processing": true, // Show processing indicator
                "serverSide": true, // Enable server-side processing
                "filter": true,     // Enable filtering
                "responsive": true,
                "paging": true,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "lengthMenu": [
                    [25, 50, 100, -1],
                    [25, 50, 100, "All"]
                ],
                "ajax": {
                    "url": "@Url.Action("GetProperties", "Property")",
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs": [
                    { "orderable": false, "targets": [0, 3, 4, 6, 7] }, // Disable sorting on specific columns
                    { "searchable": false, "targets": [0] },
                    { responsivePriority: 1, targets: 1 },
                    { responsivePriority: 2, targets: 2 }
                ],
                "columns": [
                    {
                        "data": "id", "render": function (data, type, row) {
                            // Create the 'Info' link for the first column
                            return `<a href="/Property/PropertyInfo?propertyId=${data}" class="text-primary fw-bold" style="cursor:pointer;">Info</a>`;
                        },
                        "name": "InfoLink", "autoWidth": true
                    },
                    {
                        "data": "code", "name": "Code", "autoWidth": true, "render": function (data, type, row) {
                            // Custom rendering for the 'Code' and 'Status' badge
                            let statusBadge = '';
                            let availableDate = '';
                            switch (row.status) {
                                case "Available":
                                    statusBadge = `<span class="badge rounded-pill bg-primary py-2 px-3">${row.status}</span>`;
                                    break;
                                case "Rented":
                                    statusBadge = `<span class="badge rounded-pill bg-info py-2 px-3">${row.status}</span>`;
                                    if (row.avaliableDate) {
                                        availableDate = `<br/><span class="text-warning fw-bold" style="font-size:12px;">${row.avaliableDate}</span>`;
                                    }
                                    break;
                                case "Delete":
                                    statusBadge = `<span class="badge rounded-pill bg-danger py-2 px-3">${row.status}</span>`;
                                    break;
                                case "PowerOff":
                                    statusBadge = `<span class="badge rounded-pill bg-secondary py-2 px-3">${row.status}</span>`;
                                    break;
                                default:
                                    statusBadge = `<span class="badge rounded-pill bg-warning py-2 px-3">${row.status}</span>`;
                                    break;
                            }
                            return `${data}<br/>${statusBadge}${availableDate}`;
                        }
                    },
                    {
                        "data": "lastCheckedDateString", "name": "LastCheckedDate", "autoWidth": true, "render": function (data, type, row) {
                            // Custom rendering for the 'Last Checked' date and user
                            return `${data}<br/><span class="text-primary" style="font-size:12px;">${row.lastCheckedBy}</span>`;
                        }
                    },
                    { "data": "street", "name": "Street", "autoWidth": true },
                    { "data": "comment", "name": "Comment", "autoWidth": true },
                    { "data": "salePrice", "name": "SalePrice", "autoWidth": true },
                    { "data": "owner", "name": "Owner", "autoWidth": true },
                    { "data": "remark", "name": "Remark", "autoWidth": true }
                ]
            });
        });
    </script>
}
